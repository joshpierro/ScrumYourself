{"version":3,"sources":["input/input.ts"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["import {\n  forwardRef,\n  Component,\n  HostBinding,\n  Input,\n  AfterContentInit,\n  ContentChild,\n  SimpleChange,\n  ContentChildren,\n  ViewChild,\n  ElementRef,\n  Renderer,\n  QueryList,\n  OnChanges,\n  EventEmitter,\n  Output,\n  NgModule,\n  ModuleWithProviders,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MdError, coerceBooleanProperty} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {MdPlaceholder, MdInputContainer, MdHint, MdInputDirective} from './input-container';\nimport {MdTextareaAutosize} from './autosize';\nimport {PlatformModule} from '../core/platform/index';\n\n\nconst noop = () => {};\n\n\nexport const MD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdInput),\n  multi: true\n};\n\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\nconst MD_INPUT_INVALID_INPUT_TYPE = [\n  'file',\n  'radio',\n  'checkbox',\n];\n\n\nlet nextUniqueId = 0;\n\n/** @docs-private */\nexport class MdInputPlaceholderConflictError extends MdError {\n  constructor() {\n    super('Placeholder attribute and child element were both specified.');\n  }\n}\n\n/** @docs-private */\nexport class MdInputUnsupportedTypeError extends MdError {\n  constructor(type: string) {\n    super(`Input type \"${type}\" isn't supported by md-input.`);\n  }\n}\n\n/** @docs-private */\nexport class MdInputDuplicatedHintError extends MdError {\n  constructor(align: string) {\n    super(`A hint was already declared for 'align=\"${align}\"'.`);\n  }\n}\n\n\n/**\n * Component that represents a text input. It encapsulates the <input> HTMLElement and\n * improve on its behaviour, along with styling it according to the Material Design.\n * @deprecated\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-input, md-textarea',\n  templateUrl: 'input.html',\n  styleUrls: ['input.css'],\n  providers: [MD_INPUT_CONTROL_VALUE_ACCESSOR],\n  host: {'(click)' : 'focus()'},\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdInput implements ControlValueAccessor, AfterContentInit, OnChanges {\n  private _focused: boolean = false;\n  private _value: any = '';\n\n  /** Callback registered via registerOnTouched (ControlValueAccessor) */\n  private _onTouchedCallback: () => void = noop;\n  /** Callback registered via registerOnChange (ControlValueAccessor) */\n  private _onChangeCallback: (_: any) => void = noop;\n\n  /**\n   * Aria related inputs.\n   */\n  @Input('aria-label') ariaLabel: string;\n  @Input('aria-labelledby') ariaLabelledBy: string;\n\n  private _ariaDisabled: boolean;\n  private _ariaRequired: boolean;\n  private _ariaInvalid: boolean;\n\n  /** Mirrors the native `aria-disabled` attribute. */\n  @Input('aria-disabled')\n  get ariaDisabled(): boolean { return this._ariaDisabled; }\n  set ariaDisabled(value) { this._ariaDisabled = coerceBooleanProperty(value); }\n\n  /** Mirrors the native `aria-required` attribute. */\n  @Input('aria-required')\n  get ariaRequired(): boolean { return this._ariaRequired; }\n  set ariaRequired(value) { this._ariaRequired = coerceBooleanProperty(value); }\n\n  /** Mirrors the native `aria-invalid` attribute. */\n  @Input('aria-invalid')\n  get ariaInvalid(): boolean { return this._ariaInvalid; }\n  set ariaInvalid(value) { this._ariaInvalid = coerceBooleanProperty(value); }\n\n  /**\n   * Content directives.\n   */\n  @ContentChild(MdPlaceholder) _placeholderChild: MdPlaceholder;\n  @ContentChildren(MdHint) _hintChildren: QueryList<MdHint>;\n\n  /** Readonly properties. */\n\n  /** Whether the element is focused. */\n  get focused() { return this._focused; }\n\n  /** Whether the element is empty. */\n  get empty() { return (this._value == null || this._value === '') && this.type !== 'date'; }\n\n  /** Amount of characters inside the element. */\n  get characterCount(): number {\n    return this.empty ? 0 : ('' + this._value).length;\n  }\n\n  /** Unique element id. */\n  get inputId(): string { return `${this.id}-input`; }\n\n  /** Alignment of the input container's content. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Color of the input divider, based on the theme. */\n  @Input() dividerColor: 'primary' | 'accent' | 'warn' = 'primary';\n\n  /** Text for the input hint. */\n  @Input() hintLabel: string = '';\n\n  /** Mirrors the native `autocomplete` attribute. */\n  @Input() autocomplete: string;\n\n  /** Mirrors the native `autocorrect` attribute. */\n  @Input() autocorrect: string;\n\n  /** Mirrors the native `autocapitalize` attribute. */\n  @Input() autocapitalize: string;\n\n  /** Unique id for the input element. */\n  @Input() id: string = `md-input-${nextUniqueId++}`;\n\n  /** Mirrors the native `list` attribute. */\n  @Input() list: string = null;\n\n  /** Mirrors the native `max` attribute. */\n  @Input() max: string | number = null;\n\n  /** Mirrors the native `maxlength` attribute. */\n  @Input() maxlength: number = null;\n\n  /** Mirrors the native `min` attribute. */\n  @Input() min: string | number = null;\n\n  /** Mirrors the native `minlength` attribute. */\n  @Input() minlength: number = null;\n\n  /** Mirrors the native `placeholder` attribute. */\n  @Input() placeholder: string = null;\n\n  /** Mirrors the native `step` attribute. */\n  @Input() step: number = null;\n\n  /** Mirrors the native `tabindex` attribute. */\n  @Input() tabindex: number = null;\n\n  /** Mirrors the native `type` attribute. */\n  @Input() type: string = 'text';\n\n  /** Mirrors the native `name` attribute. */\n  @Input() name: string = null;\n\n  // textarea-specific\n  /** Mirrors the native `rows` attribute. */\n  @Input() rows: number = null;\n\n  /** Mirrors the native `cols` attribute. */\n  @Input() cols: number = null;\n\n  /** Whether to do a soft or hard wrap of the text.. */\n  @Input() wrap: 'soft' | 'hard' = null;\n\n  private _floatingPlaceholder: boolean = true;\n  private _autofocus: boolean = false;\n  private _disabled: boolean = false;\n  private _readonly: boolean = false;\n  private _required: boolean = false;\n  private _spellcheck: boolean = false;\n\n  /** Text for the floating placeholder. */\n  @Input()\n  get floatingPlaceholder(): boolean { return this._floatingPlaceholder; }\n  set floatingPlaceholder(value) { this._floatingPlaceholder = coerceBooleanProperty(value); }\n\n  /** Whether to automatically focus the input. */\n  @Input()\n  get autofocus(): boolean { return this._autofocus; }\n  set autofocus(value) { this._autofocus = coerceBooleanProperty(value); }\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether the input is readonly. */\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n\n  /** Whether the input is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value) { this._required = coerceBooleanProperty(value); }\n\n  /** Whether spellchecking is enable on the input. */\n  @Input()\n  get spellcheck(): boolean { return this._spellcheck; }\n  set spellcheck(value) { this._spellcheck = coerceBooleanProperty(value); }\n\n\n  private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n  private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n  /** Event emitted when the input is blurred. */\n  @Output('blur')\n  get onBlur(): Observable<FocusEvent> {\n    return this._blurEmitter.asObservable();\n  }\n\n  /** Event emitted when the input is focused. */\n  @Output('focus')\n  get onFocus(): Observable<FocusEvent> {\n    return this._focusEmitter.asObservable();\n  }\n\n  /** Value of the input. */\n  @Input()\n  get value(): any { return this._value; };\n  set value(v: any) {\n    v = this._convertValueForInputType(v);\n    if (v !== this._value) {\n      this._value = v;\n      this._onChangeCallback(v);\n    }\n  }\n\n  // This is to remove the `align` property of the `md-input` itself. Otherwise HTML5\n  // might place it as RTL when we don't want to. We still want to use `align` as an\n  // Input though, so we use HostBinding.\n  @HostBinding('attr.align') get _align(): any { return null; }\n\n\n  @ViewChild('input') _inputElement: ElementRef;\n\n  _elementType: 'input' | 'textarea';\n\n  constructor(elementRef: ElementRef, private _renderer: Renderer) {\n    // Set the element type depending on normalized selector used(md-input / md-textarea)\n    this._elementType = elementRef.nativeElement.nodeName.toLowerCase() === 'md-input' ?\n        'input' :\n        'textarea';\n  }\n\n  /** Set focus on input */\n  focus() {\n    this._renderer.invokeElementMethod(this._inputElement.nativeElement, 'focus');\n  }\n\n  _handleFocus(event: FocusEvent) {\n    this._focused = true;\n    this._focusEmitter.emit(event);\n  }\n\n  _handleBlur(event: FocusEvent) {\n    this._focused = false;\n    this._onTouchedCallback();\n    this._blurEmitter.emit(event);\n  }\n\n  _handleChange(event: Event) {\n    this.value = (<HTMLInputElement>event.target).value;\n    this._onTouchedCallback();\n  }\n\n  _hasPlaceholder(): boolean {\n    return !!this.placeholder || this._placeholderChild != null;\n  }\n\n  /**\n   * Sets the model value of the input. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set.\n   */\n  writeValue(value: any) {\n    this._value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the input value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: any) {\n    this._onChangeCallback = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the input has been touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this._onTouchedCallback = fn;\n  }\n\n  /**\n   * Sets whether the input is disabled.\n   * Implemented as a part of ControlValueAccessor.\n   * @param isDisabled Whether the input should be disabled.\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  ngAfterContentInit() {\n    this._validateConstraints();\n\n    // Trigger validation when the hint children change.\n    this._hintChildren.changes.subscribe(() => {\n      this._validateConstraints();\n    });\n  }\n\n  ngOnChanges(changes: {[key: string]: SimpleChange}) {\n    this._validateConstraints();\n  }\n\n  /**\n   * Convert the value passed in to a value that is expected from the type of the md-input.\n   * This is normally performed by the *_VALUE_ACCESSOR in forms, but since the type is bound\n   * on our internal input it won't work locally.\n   * @private\n   */\n  private _convertValueForInputType(v: any): any {\n    switch (this.type) {\n      case 'number': return parseFloat(v);\n      default: return v;\n    }\n  }\n\n  /**\n   * Ensure that all constraints defined by the API are validated, or throw errors otherwise.\n   * Constraints for now:\n   *   - placeholder attribute and <md-placeholder> are mutually exclusive.\n   *   - type attribute is not one of the forbidden types (see constant at the top).\n   *   - Maximum one of each `<md-hint>` alignment specified, with the attribute being\n   *     considered as align=\"start\".\n   * @private\n   */\n  private _validateConstraints() {\n    if (this.placeholder != '' && this.placeholder != null && this._placeholderChild != null) {\n      throw new MdInputPlaceholderConflictError();\n    }\n    if (MD_INPUT_INVALID_INPUT_TYPE.indexOf(this.type) != -1) {\n      throw new MdInputUnsupportedTypeError(this.type);\n    }\n\n    if (this._hintChildren) {\n      // Validate the hint labels.\n      let startHint: MdHint = null;\n      let endHint: MdHint = null;\n      this._hintChildren.forEach((hint: MdHint) => {\n        if (hint.align == 'start') {\n          if (startHint || this.hintLabel) {\n            throw new MdInputDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align == 'end') {\n          if (endHint) {\n            throw new MdInputDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n}\n\n\n@NgModule({\n  declarations: [\n    MdInput,\n    MdPlaceholder,\n    MdInputContainer,\n    MdHint,\n    MdTextareaAutosize,\n    MdInputDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PlatformModule,\n  ],\n  exports: [\n    MdInput,\n    MdPlaceholder,\n    MdInputContainer,\n    MdHint,\n    MdTextareaAutosize,\n    MdInputDirective\n  ],\n})\nexport class MdInputModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdInputModule,\n      providers: PlatformModule.forRoot().providers,\n    };\n  }\n}\n"]}