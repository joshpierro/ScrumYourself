{"version":3,"sources":["core/compatibility/no-conflict-mode.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,QAAQ,EAAuB,SAAS,EAAC,MAAM,eAAe;OAC/D,EAAC,2BAA2B,EAAC,MAAM,gBAAgB;AAG1D,wFAAwF;AACxF,OAAO,IAAM,oBAAoB,GAAG,ynBAsCnC,CAAC;AAEF,oEAAoE;AAEpE;IACE;QACE,MAAM,KAAK,CAAC,uEAAuE,CAAC,CAAC;IACvF,CAAC;IAJH;QAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;;wBAAA;IAK5C,uBAAC;AAAD,CAJA,AAIC,IAAA;AAUD;IAAA;IAOA,CAAC;IANQ,wCAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,gCAAgC;YAC1C,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAbH;QAAC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;YAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;YAC3B,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI;iBACrD,CAAC;SACH,CAAC;;wCAAA;IAQF,uCAAC;AAAD,CAPA,AAOC,IAAA","file":"no-conflict-mode.js","sourcesContent":["import {NgModule, ModuleWithProviders, Directive} from '@angular/core';\nimport {MATERIAL_COMPATIBILITY_MODE} from './default-mode';\n\n\n/** Selector that matches all elements that may have style collisions with material1. */\nexport const MD_ELEMENTS_SELECTOR = `\n  md-autocomplete,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-checkbox,\n  md-chip,\n  md-dialog-container,\n  md-divider,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-hint,\n  md-icon,\n  md-ink-bar,\n  md-input,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-progress-circle,\n  md-radio-button,\n  md-radio-group,\n  md-select,\n  md-sidenav,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-toolbar\n`;\n\n/** Directive that enforces that the `md-` prefix cannot be used. */\n@Directive({selector: MD_ELEMENTS_SELECTOR})\nexport class MdPrefixEnforcer {\n  constructor() {\n    throw Error('The \"md-\" prefix cannot be used in ng-material v1 compatibility mode.');\n  }\n}\n\n\n@NgModule({\n  declarations: [MdPrefixEnforcer],\n  exports: [MdPrefixEnforcer],\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n})\nexport class NoConflictStyleCompatibilityMode {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NoConflictStyleCompatibilityMode,\n      providers: [],\n    };\n  }\n}\n"]}