{"version":3,"sources":["core/ripple/ripple.ts"],"names":[],"mappings":"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","file":"ripple.js","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n} from '@angular/core';\nimport {\n  RippleRenderer,\n  ForegroundRipple,\n  ForegroundRippleState,\n} from './ripple-renderer';\nimport {DefaultStyleCompatibilityModeModule} from '../compatibility/default-mode';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\n\n\n@Directive({\n  selector: '[md-ripple], [mat-ripple]',\n})\nexport class MdRipple implements OnInit, OnDestroy, OnChanges {\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // That breaks tests running in node that load material components.\n  @Input('mdRippleTrigger') trigger: HTMLElement|HTMLElement;\n\n  /** @deprecated */\n  @Input('md-ripple-trigger')\n  get _triggerDeprecated() { return this.trigger; }\n  set _triggerDeprecated(value: HTMLElement|HTMLElement) { this.trigger = value; };\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('mdRippleCentered') centered: boolean;\n\n  /** @deprecated */\n  @Input('md-ripple-centered')\n  get _centeredDeprecated() { return this.centered; }\n  set _centeredDeprecated(value: boolean) { this.centered = value; };\n\n  /**\n   * Whether click events will not trigger the ripple. It can still be triggered by manually\n   * calling start() and end().\n   */\n  @Input('mdRippleDisabled') disabled: boolean;\n\n  /** @deprecated */\n  @Input('md-ripple-disabled')\n  get _disabledDeprecated() { return this.disabled; }\n  set _disabledDeprecated(value: boolean) { this.disabled = value; };\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('mdRippleMaxRadius') maxRadius: number = 0;\n\n  /** @deprecated */\n  @Input('md-ripple-max-radius')\n  get _maxRadiusDeprecated() { return this.maxRadius; }\n  set _maxRadiusDeprecated(value: number) { this.maxRadius = value; };\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   */\n  @Input('mdRippleSpeedFactor') speedFactor: number = 1;\n\n  /** @deprecated */\n  @Input('md-ripple-speed-factor')\n  get _speedFactorDeprecated() { return this.speedFactor; }\n  set _speedFactorDeprecated(value: number) { this.speedFactor = value; };\n\n  /** Custom color for ripples. */\n  @Input('mdRippleColor') color: string;\n\n  /** @deprecated */\n  @Input('md-ripple-color')\n  get _colorDeprecated() { return this.color; }\n  set _colorDeprecated(value: string) { this.color = value; };\n\n  /** Custom color for the ripple background. */\n  @Input('mdRippleBackgroundColor') backgroundColor: string;\n\n  /** @deprecated */\n  @Input('md-ripple-background-color')\n  get _backgroundColorDeprecated() { return this.backgroundColor; }\n  set _backgroundColorDeprecated(value: string) { this.backgroundColor = value; };\n\n  /** Whether the ripple background will be highlighted to indicated a focused state. */\n  @HostBinding('class.md-ripple-focused') @Input('mdRippleFocused') focused: boolean;\n\n  /** @deprecated */\n  @Input('md-ripple-focused')\n  get _focusedDeprecated(): boolean { return this.focused; }\n  set _focusedDeprecated(value: boolean) { this.focused = value; };\n\n  /** Whether foreground ripples should be visible outside the component's bounds. */\n  @HostBinding('class.md-ripple-unbounded') @Input('mdRippleUnbounded') unbounded: boolean;\n\n  /** @deprecated */\n  @Input('md-ripple-unbounded')\n  get _unboundedDeprecated(): boolean { return this.unbounded; }\n  set _unboundedDeprecated(value: boolean) { this.unbounded = value; };\n\n  private _rippleRenderer: RippleRenderer;\n  _ruler: ViewportRuler;\n\n  constructor(_elementRef: ElementRef, _ngZone: NgZone, _ruler: ViewportRuler) {\n    // These event handlers are attached to the element that triggers the ripple animations.\n    const eventHandlers = new Map<string, (e: Event) => void>();\n    eventHandlers.set('mousedown', (event: MouseEvent) => this._mouseDown(event));\n    eventHandlers.set('click', (event: MouseEvent) => this._click(event));\n    eventHandlers.set('mouseleave', (event: MouseEvent) => this._mouseLeave(event));\n    this._rippleRenderer = new RippleRenderer(_elementRef, eventHandlers, _ngZone);\n    this._ruler = _ruler;\n  }\n\n  ngOnInit() {\n    // If no trigger element was explicity set, use the host element\n    if (!this.trigger) {\n      this._rippleRenderer.setTriggerElementToHost();\n    }\n    if (!this.disabled) {\n      this._rippleRenderer.createBackgroundIfNeeded();\n    }\n  }\n\n  ngOnDestroy() {\n    // Remove event listeners on the trigger element.\n    this._rippleRenderer.clearTriggerElement();\n  }\n\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    // If the trigger element changed (or is being initially set), add event listeners to it.\n    const changedInputs = Object.keys(changes);\n    if (changedInputs.indexOf('trigger') !== -1) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n    if (!this.disabled) {\n      this._rippleRenderer.createBackgroundIfNeeded();\n    }\n  }\n\n  /**\n   * Responds to the start of a ripple animation trigger by fading the background in.\n   */\n  start() {\n    this._rippleRenderer.createBackgroundIfNeeded();\n    this._rippleRenderer.fadeInRippleBackground(this.backgroundColor);\n  }\n\n  /**\n   * Responds to the end of a ripple animation trigger by fading the background out, and creating a\n   * foreground ripple that expands from the event location (or from the center of the element if\n   * the \"centered\" property is set or forceCenter is true).\n   */\n  end(left: number, top: number, forceCenter = true) {\n    this._rippleRenderer.createForegroundRipple(\n      left,\n      top,\n      this.color,\n      this.centered || forceCenter,\n      this.maxRadius,\n      this.speedFactor,\n      (ripple: ForegroundRipple, e: TransitionEvent) => this._rippleTransitionEnded(ripple, e));\n    this._rippleRenderer.fadeOutRippleBackground();\n  }\n\n  private _rippleTransitionEnded(ripple: ForegroundRipple, event: TransitionEvent) {\n    if (event.propertyName === 'opacity') {\n      // If the ripple finished expanding, start fading it out. If it finished fading out,\n      // remove it from the DOM.\n      switch (ripple.state) {\n        case ForegroundRippleState.EXPANDING:\n          this._rippleRenderer.fadeOutForegroundRipple(ripple.rippleElement);\n          ripple.state = ForegroundRippleState.FADING_OUT;\n          break;\n        case ForegroundRippleState.FADING_OUT:\n          this._rippleRenderer.removeRippleFromDom(ripple.rippleElement);\n          break;\n      }\n    }\n  }\n\n  /**\n   * Called when the trigger element receives a mousedown event. Starts the ripple animation by\n   * fading in the background.\n   */\n  private _mouseDown(event: MouseEvent) {\n    if (!this.disabled && event.button === 0) {\n      this.start();\n    }\n  }\n\n  /**\n   * Called when the trigger element receives a click event. Creates a foreground ripple and\n   * runs its animation.\n   */\n  private _click(event: MouseEvent) {\n    if (!this.disabled && event.button === 0) {\n      // If screen and page positions are all 0, this was probably triggered by a keypress.\n      // In that case, use the center of the bounding rect as the ripple origin.\n      // FIXME: This fails on IE11, which still sets pageX/Y and screenX/Y on keyboard clicks.\n      const isKeyEvent =\n          (event.screenX === 0 && event.screenY === 0 && event.pageX === 0 && event.pageY === 0);\n\n      this.end(event.pageX - this._ruler.getViewportScrollPosition().left,\n        event.pageY - this._ruler.getViewportScrollPosition().top,\n        isKeyEvent);\n    }\n  }\n\n  /**\n   * Called when the trigger element receives a mouseleave event. Fades out the background.\n   */\n  private _mouseLeave(event: MouseEvent) {\n    // We can always fade out the background here; It's a no-op if it was already inactive.\n    this._rippleRenderer.fadeOutRippleBackground();\n  }\n\n  // TODO: Reactivate the background div if the user drags out and back in.\n}\n\n\n@NgModule({\n  imports: [DefaultStyleCompatibilityModeModule],\n  exports: [MdRipple, DefaultStyleCompatibilityModeModule],\n  declarations: [MdRipple],\n})\nexport class MdRippleModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdRippleModule,\n      providers: [ViewportRuler]\n    };\n  }\n}\n"]}