{"version":3,"sources":["toolbar/toolbar.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,QAAQ,EAER,SAAS,EACT,uBAAuB,EACvB,KAAK,EACL,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,QAAQ,EACT,MAAM,eAAe;OACf,EAAC,mCAAmC,EAAC,MAAM,SAAS;AAM3D;IAAA;IAA2B,CAAC;IAH5B;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;SAC5C,CAAC;;oBAAA;IACyB,mBAAC;AAAD,CAA3B,AAA4B,IAAA;AAU5B;IAIE,mBAAoB,UAAsB,EAAU,QAAkB;QAAlD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAI3E,sBAAI,4BAAK;QAFT,iEAAiE;aAEjE;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,KAAa;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;;;OAJA;IAMO,gCAAY,GAApB,UAAqB,QAAgB;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,CAAC;IAEO,oCAAgB,GAAxB,UAAyB,KAAa,EAAE,KAAc;QACpD,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAM,KAAO,EAAE,KAAK,CAAC,CAAC;QACrF,CAAC;IACH,CAAC;IAnBD;QAAC,KAAK,EAAE;;0CAAA;IAfV;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,cAAc;YAC3B,SAAS,EAAE,CAAC,aAAa,CAAC;YAC1B,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;iBAAA;IA6BF,gBAAC;AAAD,CA5BA,AA4BC,IAAA;AAQD;IAAA;IAOA,CAAC;IANQ,uBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAXH;QAAC,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,mCAAmC,CAAC;YAC9C,OAAO,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,mCAAmC,CAAC;YACvE,YAAY,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;SACxC,CAAC;;uBAAA;IAQF,sBAAC;AAAD,CAPA,AAOC,IAAA","file":"toolbar.js","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewEncapsulation,\n  Directive,\n  ElementRef,\n  Renderer\n} from '@angular/core';\nimport {DefaultStyleCompatibilityModeModule} from '../core';\n\n\n@Directive({\n  selector: 'md-toolbar-row, mat-toolbar-row'\n})\nexport class MdToolbarRow {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-toolbar, mat-toolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdToolbar {\n\n  private _color: string;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer) { }\n\n  /** The color of the toolbar. Can be primary, accent, or warn. */\n  @Input()\n  get color(): string {\n    return this._color;\n  }\n\n  set color(value: string) {\n    this._updateColor(value);\n  }\n\n  private _updateColor(newColor: string) {\n    this._setElementColor(this._color, false);\n    this._setElementColor(newColor, true);\n    this._color = newColor;\n  }\n\n  private _setElementColor(color: string, isAdd: boolean) {\n    if (color != null && color != '') {\n      this.renderer.setElementClass(this.elementRef.nativeElement, `md-${color}`, isAdd);\n    }\n  }\n\n}\n\n\n@NgModule({\n  imports: [DefaultStyleCompatibilityModeModule],\n  exports: [MdToolbar, MdToolbarRow, DefaultStyleCompatibilityModeModule],\n  declarations: [MdToolbar, MdToolbarRow],\n})\nexport class MdToolbarModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdToolbarModule,\n      providers: []\n    };\n  }\n}\n"]}