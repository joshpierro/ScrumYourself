{"version":3,"sources":["grid-list/grid-tile.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,QAAQ,EACR,UAAU,EACV,KAAK,EACL,eAAe,EACf,SAAS,EAEV,MAAM,eAAe;OACf,EAAC,MAAM,EAAE,YAAY,EAAC,MAAM,SAAS;OACrC,EAAC,cAAc,EAAC,MAAM,qBAAqB;AAUlD;IAIE,oBAAoB,SAAmB,EAAU,QAAoB;QAAjD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAY;QAHrE,aAAQ,GAAW,CAAC,CAAC;QACrB,aAAQ,GAAW,CAAC,CAAC;IAEmD,CAAC;IAIzE,sBAAI,+BAAO;QAFX,kDAAkD;aAElD,cAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aACvC,UAAY,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OADtB;IAKvC,sBAAI,+BAAO;QAFX,qDAAqD;aAErD,cAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;aACvC,UAAY,KAAK,IAAI,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;OADtB;IAGvC;;;OAGG;IACH,8BAAS,GAAT,UAAU,QAAgB,EAAE,KAAa;QACvC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IAfD;QAAC,KAAK,EAAE;;6CAAA;IAKR;QAAC,KAAK,EAAE;;6CAAA;IApBV;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,6BAA6B;YACvC,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;YAC5B,WAAW,EAAE,gBAAgB;YAC7B,SAAS,EAAE,CAAC,eAAe,CAAC;YAC5B,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;kBAAA;IAyBF,iBAAC;AAAD,CAxBA,AAwBC,IAAA;AAOD;IAQE,wBAAoB,SAAmB,EAAU,QAAoB;QAAjD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAY;IAAG,CAAC;IAEzE,2CAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClF,CAAC;IAND;QAAC,eAAe,CAAC,MAAM,CAAC;;kDAAA;IAX1B;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sFAAsF;YAChG,WAAW,EAAE,qBAAqB;SACnC,CAAC;;sBAAA;IAcF,qBAAC;AAAD,CAbA,AAaC,IAAA","file":"grid-tile.js","sourcesContent":["import {\n  Component,\n  ViewEncapsulation,\n  Renderer,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit\n} from '@angular/core';\nimport {MdLine, MdLineSetter} from '../core';\nimport {coerceToNumber} from './grid-list-measure';\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-grid-tile, mat-grid-tile',\n  host: { 'role': 'listitem' },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  /** Amount of rows that the grid tile takes up. */\n  @Input()\n  get rowspan() { return this._rowspan; }\n  set rowspan(value) { this._rowspan = coerceToNumber(value); }\n\n  /** Amount of columns that the grid tile takes up. */\n  @Input()\n  get colspan() { return this._colspan; }\n  set colspan(value) { this._colspan = coerceToNumber(value); }\n\n  /**\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n   * \"Changed after checked\" errors that would occur with HostBinding.\n   */\n  _setStyle(property: string, value: string): void {\n    this._renderer.setElementStyle(this._element.nativeElement, property, value);\n  }\n\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html'\n})\nexport class MdGridTileText implements AfterContentInit {\n  /**\n   *  Helper that watches the number of lines in a text area and sets\n   * a class on the host element that matches the line count.\n   */\n  _lineSetter: MdLineSetter;\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  ngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\n}\n\n"]}